{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["createTime","Date","toUTCString","slice","Clock","state","today","timerId","this","window","setInterval","setState","prevProps","prevState","clockName","props","console","debug","info","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","handleContextmenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IAGP,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,MAAON,KAFX,EAKEO,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,MAAON,QACtB,OAVP,gCAaE,SAAmBY,EAAkBC,GACnC,IAAQC,EAAcN,KAAKO,MAAnBD,UACAR,EAAUE,KAAKH,MAAfC,MAEJM,EAAUE,YAAcA,GAC1BL,OAAOO,QAAQC,MAAf,uBAAqCH,EAArC,eAAqDF,EAAUE,YAG7DD,EAAUP,QAAUA,GACtBG,OAAOO,QAAQE,KAAKL,EAAUP,SAtBpC,kCA0BE,WACEG,OAAOU,cAAcX,KAAKD,WA3B9B,oBA8BE,WACE,IAAQD,EAAUE,KAAKH,MAAfC,MACAQ,EAAcN,KAAKO,MAAnBD,UAER,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGd,WA3CX,GAA2Be,IAAMC,WCZjC,SAASC,IACP,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBS,UAAW,UACXc,UAAU,GAHd,EAMErB,QAAU,EANZ,EAuBEsB,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEiB,UAAU,KA1B9B,EA6BEI,YAAc,SAACF,GACbA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEiB,UAAU,KAhC9B,uDAQE,WAAqB,IAAD,OAClBpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEG,UAAWS,QAC1B,MAEHU,SAASC,iBAAiB,cAAe1B,KAAKqB,mBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,eAd5C,kCAiBE,WACEvB,OAAOU,cAAcX,KAAKD,SAC1B0B,SAASE,oBAAoB,cAAe3B,KAAKqB,mBACjDI,SAASE,oBAAoB,QAAS3B,KAAKwB,eApB/C,oBAmCE,WACE,MAAgCxB,KAAKH,MAA7BS,EAAR,EAAQA,UAAWc,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOd,UAAWA,WA1CvC,GAAyBO,IAAMC,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d8c058f5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction createTime() {\n  const date = new Date();\n\n  return date.toUTCString().slice(-12, -4);\n}\n\ninterface Props {\n  clockName: string;\n}\n\ninterface State {\n  today: string,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: createTime(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: createTime() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    if (prevProps.clockName !== clockName) {\n      window.console.debug(`Renamed from ${clockName} to ${prevProps.clockName}`);\n    }\n\n    if (prevState.today !== today) {\n      window.console.info(prevState.today);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextmenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextmenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextmenu = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}